/**
 * BcacheFS data structures definitions in Javascript for Okteta.
 */

K                        = importScript("bcachefs/const.js");
bkey                     = importScript("bcachefs/bkey.js").bkey;
//bch_deleted              = importScript("bcachefs/bch_deleted.js").bch_deleted;
//bch_discard              = importScript("bcachefs/bch_discard.js").bch_discard;
//bch_error                = importScript("bcachefs/bch_error.js").bch_error;
bch_cookie               = importScript("bcachefs/bch_cookie.js").bch_cookie;
//bch_whiteout             = importScript("bcachefs/bch_whiteout.js").bch_whiteout;
bch_btree_ptr            = importScript("bcachefs/bch_btree_ptr.js").bch_btree_ptr;
bch_extent               = importScript("bcachefs/bch_extent.js").bch_extent;
bch_reservation          = importScript("bcachefs/bch_reservation.js").bch_reservation;
bch_inode                = importScript("bcachefs/bch_inode.js").bch_inode;
bch_inode_generation     = importScript("bcachefs/bch_inode_generation.js").bch_inode_generation;
bch_dirent               = importScript("bcachefs/bch_dirent.js").bch_dirent;
bch_xattr                = importScript("bcachefs/bch_xattr.js").bch_xattr;
bch_alloc                = importScript("bcachefs/bch_alloc.js").bch_alloc;
bch_quota                = importScript("bcachefs/bch_quota.js").bch_quota;
bch_stripe               = importScript("bcachefs/bch_stripe.js").bch_stripe;
bch_reflink_p            = importScript("bcachefs/bch_reflink_p.js").bch_reflink_p;
bch_reflink_v            = importScript("bcachefs/bch_reflink_v.js").bch_reflink_v;
bch_inline_data          = importScript("bcachefs/bch_inline_data.js").bch_inline_data;
bch_btree_ptr_v2         = importScript("bcachefs/bch_btree_ptr_v2.js").bch_btree_ptr_v2;
bch_indirect_inline_data = importScript("bcachefs/bch_indirect_inline_data.js").bch_indirect_inline_data;




/**
 * Helpers
 */

function key_alternative(name, code, field){
    var selectClosure = function(){
        return this.wasAbleToRead && this.k.u64s.value >= 5 && this.k.type.value == code;
    };
    
    return alternative(selectClosure, {v: field}, name);
}



/**
 * Header:      #include "bcache_format.h" (struct bkey_i{})
 * Header:      #include "bkey.h"          (struct bkey_i_*{})
 * Declaration: struct bkey_i{}
 *              struct bkey_i_*{}          (generated by BKEY_VAL_ACCESSORS)
 * Size:        this->u64s*8 (minimum 40)
 */

function bkey_i(){
    var DEF = array(uint64(), function(){return this.parent.k.u64s.value-5;});
    return taggedUnion({k: bkey()}, [
        key_alternative("bkey_i_deleted",              K.bch_bkey_type.KEY_TYPE_deleted,              DEF),
        key_alternative("bkey_i_discard",              K.bch_bkey_type.KEY_TYPE_discard,              DEF),
        key_alternative("bkey_i_error",                K.bch_bkey_type.KEY_TYPE_error,                DEF),
        key_alternative("bkey_i_cookie",               K.bch_bkey_type.KEY_TYPE_cookie,               bch_cookie()),
        key_alternative("bkey_i_whiteout",             K.bch_bkey_type.KEY_TYPE_whiteout,             DEF),
        key_alternative("bkey_i_btree_ptr",            K.bch_bkey_type.KEY_TYPE_btree_ptr,            DEF),
        key_alternative("bkey_i_extent",               K.bch_bkey_type.KEY_TYPE_extent,               DEF),
        key_alternative("bkey_i_reservation",          K.bch_bkey_type.KEY_TYPE_reservation,          bch_reservation()),
        key_alternative("bkey_i_inode",                K.bch_bkey_type.KEY_TYPE_inode,                DEF),
        key_alternative("bkey_i_inode_generation",     K.bch_bkey_type.KEY_TYPE_inode_generation,     bch_inode_generation()),
        key_alternative("bkey_i_dirent",               K.bch_bkey_type.KEY_TYPE_dirent,               DEF),
        key_alternative("bkey_i_xattr",                K.bch_bkey_type.KEY_TYPE_xattr,                DEF),
        key_alternative("bkey_i_alloc",                K.bch_bkey_type.KEY_TYPE_alloc,                DEF),
        key_alternative("bkey_i_quota",                K.bch_bkey_type.KEY_TYPE_quota,                bch_quota()),
        key_alternative("bkey_i_stripe",               K.bch_bkey_type.KEY_TYPE_stripe,               DEF),
        key_alternative("bkey_i_reflink_p",            K.bch_bkey_type.KEY_TYPE_reflink_p,            DEF),
        key_alternative("bkey_i_reflink_v",            K.bch_bkey_type.KEY_TYPE_reflink_v,            DEF),
        key_alternative("bkey_i_inline_data",          K.bch_bkey_type.KEY_TYPE_inline_data,          DEF),
        key_alternative("bkey_i_btree_ptr_v2",         K.bch_bkey_type.KEY_TYPE_btree_ptr_v2,         bch_btree_ptr_v2()),
        key_alternative("bkey_i_indirect_inline_data", K.bch_bkey_type.KEY_TYPE_indirect_inline_data, DEF),
    ], {v: DEF}).set({byteOrder: "little-endian"});
}
